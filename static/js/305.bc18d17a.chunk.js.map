{"version":3,"file":"static/js/305.bc18d17a.chunk.js","mappings":"0NACA,EAA+B,8BAA/B,EAA2E,6B,SC8C3E,EA1CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0CE,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRD,GAAY,IACZE,EAAAA,EAAAA,IAAgBV,GACbW,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPN,EAAWM,EAAKC,SAChBT,GAAiB,EAClB,IACAU,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,SAAQ,WACPV,GAAY,EACb,GACJ,GAAE,CAACR,KAGF,+BACIO,GAAYJ,IACZ,8BACGE,EAAQc,OAAS,GAChB,eAAIC,UAAWC,EAAf,SACGhB,EAAQiB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,2BACE,qCAAaF,MACb,cAAGH,UAAWC,EAAd,SAAgCG,MAFzBC,EADE,OAQf,uEAMX,C,mKC3CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAY,SAAAC,GACvB,OAAOH,EAAAA,EAAAA,GAAM,qBAAsB,CACjCI,OAAQ,CACNC,QAASJ,EACTE,KAAAA,IAGL,EAEYG,EAAkB,SAAAP,GAC7B,OAAOC,EAAAA,EAAAA,GAAM,SAAD,OAAUD,GAAM,CAC1BK,OAAQ,CACNC,QAASJ,IAGd,EAEYjB,EAAkB,SAAAe,GAC7B,OAAOC,EAAAA,EAAAA,GAAM,SAAD,OAAUD,EAAV,YAAwB,CAClCK,OAAQ,CACNC,QAASJ,IAGd,EAEYM,EAAkB,SAAAR,GAC7B,OAAOC,EAAAA,EAAAA,GAAM,SAAD,OAAUD,EAAV,YAAwB,CAClCK,OAAQ,CACNC,QAASJ,IAGd,EAEYO,EAAkB,SAAAC,GAC7B,OAAOT,EAAAA,EAAAA,GAAM,eAAgB,CAC3BI,OAAQ,CACNC,QAASJ,EACTQ,MAAOA,IAGZ,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/index.jsx","utils/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviews_list\":\"Reviews_reviews_list__bJBhs\",\"description\":\"Reviews_description__xhm9j\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'utils/api';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [isReviewsShow, setIsReviewsShow] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const [isLoader, setIsLoader] = useState(false);\n\n  useEffect(() => {\n    setIsLoader(true);\n    getMovieReviews(movieId)\n      .then(({ data }) => {\n        setReviews(data.results);\n        setIsReviewsShow(true);\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        setIsLoader(false);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {!isLoader && isReviewsShow && (\n        <>\n          {reviews.length > 0 ? (\n            <ul className={css.reviews_list}>\n              {reviews.map(({ author, content, id }) => (\n                <li key={id}>\n                  <h4>Author: {author}</h4>\n                  <p className={css.description}>{content}</p>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>We don't have any reviews for this movie</p>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'ba5b4503fa86b6d45d6ec695ac0f7bd8';\n\nexport const getMovies = page => {\n  return axios('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n      page,\n    },\n  });\n};\n\nexport const getMovieDetails = id => {\n  return axios(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const getMovieReviews = id => {\n  return axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const getMovieCredits = id => {\n  return axios(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const getSearchMovies = query => {\n  return axios('search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n};\n"],"names":["movieId","useParams","useState","isReviewsShow","setIsReviewsShow","reviews","setReviews","isLoader","setIsLoader","useEffect","getMovieReviews","then","data","results","catch","error","console","log","finally","length","className","css","map","author","content","id","axios","API_KEY","getMovies","page","params","api_key","getMovieDetails","getMovieCredits","getSearchMovies","query"],"sourceRoot":""}