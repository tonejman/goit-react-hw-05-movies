{"version":3,"file":"static/js/397.37028931.chunk.js","mappings":"kOACA,EAA0B,8BAA1B,EAAqE,iCAArE,EAAmH,iCAAnH,EAA4J,4B,SC6F5J,EAxFqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAEnD,GAAsCC,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WACRD,GAAY,IACZE,EAAAA,EAAAA,IAAgBhB,GACbiB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPN,EAASM,GACTR,GAAe,EAChB,IACAS,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,SAAQ,WACPT,GAAY,EACb,GACJ,GAAE,CAACd,IAEJ,IAAQwB,EACNb,EADMa,YAAaC,EACnBd,EADmBc,MAAOC,EAC1Bf,EAD0Be,aAAcC,EACxChB,EADwCgB,aAAcC,EACtDjB,EADsDiB,SAAUC,EAChElB,EADgEkB,OAGlE,OACE,+BACIhB,GAAYJ,IACZ,iCACE,SAAC,KAAD,CAAMqB,GAAI1B,EAAY2B,QAAtB,UACE,oBAAQC,UAAWC,EAAgBC,KAAK,SAAxC,2BACkB,UAIpB,iBAAKF,UAAWC,EAAhB,WACE,yBACGT,GACC,gBACEW,IAAG,yCAAoCX,GACvCY,IAAKX,KAGP,gBACEU,IAAG,uEACHC,IAAKX,EACLY,MAAM,QACNC,OAAO,aAIb,4BACE,0BACGb,EADH,KACU,gCAAQC,EAAaa,MAAM,EAAG,GAA9B,WAEV,wCAAgBC,KAAKC,MAAqB,GAAfd,GAA3B,QACA,sCACA,uBAAIC,KACJ,mCACCC,EAAOa,OAAS,GACf,uBAAIb,EAAOc,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,SAEzC,wCAKN,iBAAKd,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,qCACA,2BACE,yBACE,SAAC,KAAD,CAAMH,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAiB,SAAD,CAAUC,UAAU,iCAApB,UACE,SAAC,KAAD,UAMX,C,mKC1FDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAY,SAAAC,GACvB,OAAOH,EAAAA,EAAAA,GAAM,qBAAsB,CACjCI,OAAQ,CACNC,QAASJ,EACTE,KAAAA,IAGL,EAEYpC,EAAkB,SAAAuC,GAC7B,OAAON,EAAAA,EAAAA,GAAM,SAAD,OAAUM,GAAM,CAC1BF,OAAQ,CACNC,QAASJ,IAGd,EAEYM,EAAkB,SAAAD,GAC7B,OAAON,EAAAA,EAAAA,GAAM,SAAD,OAAUM,EAAV,YAAwB,CAClCF,OAAQ,CACNC,QAASJ,IAGd,EAEYO,EAAkB,SAAAF,GAC7B,OAAON,EAAAA,EAAAA,GAAM,SAAD,OAAUM,EAAV,YAAwB,CAClCF,OAAQ,CACNC,QAASJ,IAGd,EAEYQ,EAAkB,SAAAC,GAC7B,OAAOV,EAAAA,EAAAA,GAAM,eAAgB,CAC3BI,OAAQ,CACNC,QAASJ,EACTS,MAAOA,IAGZ,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/index.jsx","utils/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__YMWLn\",\"infomovies\":\"MovieDetails_infomovies__P2onH\",\"buttonback\":\"MovieDetails_buttonback__Co02+\",\"title\":\"MovieDetails_title__cUGs9\"};","import React, { Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { getMovieDetails } from 'utils/api';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  const [isMovieShow, setIsMovieShow] = useState(false);\n  const [movie, setMovie] = useState([]);\n  const [isLoader, setIsLoader] = useState(false);\n\n  useEffect(() => {\n    setIsLoader(true);\n    getMovieDetails(movieId)\n      .then(({ data }) => {\n        setMovie(data);\n        setIsMovieShow(true);\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        setIsLoader(false);\n      });\n  }, [movieId]);\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n\n  return (\n    <>\n      {!isLoader && isMovieShow && (\n        <>\n          <Link to={backLinkRef.current}>\n            <button className={css.buttonback} type=\"button\">\n              &#8592; Go back{' '}\n            </button>\n          </Link>\n\n          <div className={css.wrapper}>\n            <div>\n              {poster_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n                  alt={title}\n                />\n              ) : (\n                <img\n                  src={`https://upload.wikimedia.org/wikipedia/en/d/d6/Image_coming_soon.png`}\n                  alt={title}\n                  width=\"300px\"\n                  height=\"480px\"\n                />\n              )}\n            </div>\n            <div>\n              <h1>\n                {title} <span>({release_date.slice(0, 4)})</span>\n              </h1>\n              <p>User Score: {Math.floor(vote_average * 10)}%</p>\n              <h2>Overview</h2>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              {genres.length > 0 ? (\n                <p>{genres.map(genre => genre.name).join(', ')}</p>\n              ) : (\n                <p>Other</p>\n              )}\n            </div>\n          </div>\n\n          <div className={css.infomovies}>\n            <h4 className={css.title}>Additional information</h4>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n          </div>\n          <Suspense fallback={<div>...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'ba5b4503fa86b6d45d6ec695ac0f7bd8';\n\nexport const getMovies = page => {\n  return axios('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n      page,\n    },\n  });\n};\n\nexport const getMovieDetails = id => {\n  return axios(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const getMovieReviews = id => {\n  return axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const getMovieCredits = id => {\n  return axios(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const getSearchMovies = query => {\n  return axios('search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n};\n"],"names":["movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","useState","isMovieShow","setIsMovieShow","movie","setMovie","isLoader","setIsLoader","useEffect","getMovieDetails","then","data","catch","error","console","log","finally","poster_path","title","release_date","vote_average","overview","genres","to","current","className","css","type","src","alt","width","height","slice","Math","floor","length","map","genre","name","join","Suspense","fallback","axios","API_KEY","getMovies","page","params","api_key","id","getMovieReviews","getMovieCredits","getSearchMovies","query"],"sourceRoot":""}