{"version":3,"file":"static/js/302.82d050ef.chunk.js","mappings":"oPAGO,SAASA,EAAT,GAAqC,IAAXC,EAAU,EAAVA,OACzBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYD,GAAME,MAAO,CAAEC,KAAMP,GAAzC,SACGG,KAFIC,EADC,KASjB,CCfD,MAAwB,oBCoCxB,EAhCa,WACX,OAAoCI,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeY,EAAf,KACA,GAAgCH,EAAAA,EAAAA,WAAS,GAAzC,eAAOI,EAAP,KAAiBC,EAAjB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACHL,IACHI,GAAY,IACZE,EAAAA,EAAAA,MACGC,MAAK,YAA4B,IAAjBC,EAAgB,EAAxBC,KAAQD,QACfN,GAAU,OAAIM,IACdP,GAAc,EACf,IACAS,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,SAAQ,WACPV,GAAY,EACb,IAEN,GAAE,CAACJ,KAGF,+BACIG,GAAYH,IACZ,iCACE,eAAIe,UAAWC,EAAf,6BACA,SAAC3B,EAAD,CAAgBC,OAAQA,QAKjC,C,mKCjCD2B,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHZ,EAAY,SAAAa,GACvB,OAAOF,EAAAA,EAAAA,GAAM,qBAAsB,CACjCG,OAAQ,CACNC,QAASH,EACTC,KAAAA,IAGL,EAEYG,EAAkB,SAAA3B,GAC7B,OAAOsB,EAAAA,EAAAA,GAAM,SAAD,OAAUtB,GAAM,CAC1ByB,OAAQ,CACNC,QAASH,IAGd,EAEYK,EAAkB,SAAA5B,GAC7B,OAAOsB,EAAAA,EAAAA,GAAM,SAAD,OAAUtB,EAAV,YAAwB,CAClCyB,OAAQ,CACNC,QAASH,IAGd,EAEYM,EAAkB,SAAA7B,GAC7B,OAAOsB,EAAAA,EAAAA,GAAM,SAAD,OAAUtB,EAAV,YAAwB,CAClCyB,OAAQ,CACNC,QAASH,IAGd,EAEYO,EAAkB,SAAAC,GAC7B,OAAOT,EAAAA,EAAAA,GAAM,eAAgB,CAC3BG,OAAQ,CACNC,QAASH,EACTQ,MAAOA,IAGZ,C","sources":["components/TrandingMovies/index.jsx","webpack://goit-react-hw-05-movies/./src/pages/Home/Home.module.css?1370","pages/Home/index.jsx","utils/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport function TrandingMovies({ movies }) {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ title, id }) => (\n        <li key={id}>\n          <Link to={`movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nTrandingMovies.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object.isRequired),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__L087v\"};","import { useEffect, useState } from 'react';\nimport { getMovies } from 'utils/api';\nimport { TrandingMovies } from 'components/TrandingMovies';\nimport css from './Home.module.css';\n\nconst Home = () => {\n  const [isListShow, setIsListShow] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [isLoader, setIsLoader] = useState(false);\n\n  useEffect(() => {\n    if (!isListShow) {\n      setIsLoader(true);\n      getMovies()\n        .then(({ data: { results } }) => {\n          setMovies([...results]);\n          setIsListShow(true);\n        })\n        .catch(error => console.log(error))\n        .finally(() => {\n          setIsLoader(false);\n        });\n    }\n  }, [isListShow]);\n\n  return (\n    <>\n      {!isLoader && isListShow && (\n        <>\n          <h2 className={css.title}>Trending today</h2>\n          <TrandingMovies movies={movies} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'ba5b4503fa86b6d45d6ec695ac0f7bd8';\n\nexport const getMovies = page => {\n  return axios('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n      page,\n    },\n  });\n};\n\nexport const getMovieDetails = id => {\n  return axios(`movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const getMovieReviews = id => {\n  return axios(`movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const getMovieCredits = id => {\n  return axios(`movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const getSearchMovies = query => {\n  return axios('search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n};\n"],"names":["TrandingMovies","movies","location","useLocation","map","title","id","to","state","from","useState","isListShow","setIsListShow","setMovies","isLoader","setIsLoader","useEffect","getMovies","then","results","data","catch","error","console","log","finally","className","css","axios","API_KEY","page","params","api_key","getMovieDetails","getMovieReviews","getMovieCredits","getSearchMovies","query"],"sourceRoot":""}